

<!-- GAME TABLE -->

<!doctype html>
<html>
<head>
	<title>BOARD</title>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<style>
		body { padding-top:80px; word-wrap:break-word; }
	</style>
</head>
<body>
<div class="container">

	<div class="row">
		<div style="float: right"><a href="/logout" class="btn btn-danger"><span class="glyphicon glyphicon-off"></span> Logout</a></div>
	</div>

	<div class="row">
		<div class="col-md-4">
			<button class="btn btn-primary btn-lg" type="button" onclick="startGame()">Start The Game!</button>
		</div>
		<div class="col-md-4">
			<a href="/launch?request=forfeitGame" class="btn btn-danger btn-lg" type="button">Forfeit Game</a>
		</div>
	</div>

	<div class="row">
		<div id="usersListDomId" class="col-md-8">

		</div>
	</div>


	<div style="margin-top: 5%">
		<h2 id ="boardName"></h2>
	</div>

	<div class="row" id="block-row" style="margin-top: 10%; padding-bottom: 50px">
	</div>

</div>
</body>

<script type="text/javascript">


		fetchCurrentGame();

		function fetchCurrentGame() {

			$.get("/board", {'request': 'currentPlayingGame'})
				.done( function (data, status) {
					console.log(data);
					fillBoardWithData(data);
					setUserListAndColors(data.userData);
					$('#block-row').off('click');
				})
				.fail (function(data, status) {
					console.log(data);
					redirect("launch");
				});
		}

		function fillBoardWithData(data) {
			createTable(data.rows, data.cols);

			for(var i = 0; i < data.rows; i++) {
				for (var j = 0; j < data.cols; j++) {
					var cellID = ""+(i+1)+""+(j+1);
					var userIndex = getCellIdUserIndex(cellID, data.boardData);
					var userColor = getUserColor(userIndex, data.userData);
					var cellText = getCellIdText(cellID, data.boardData);

					setCellOwnerAndText(cellID, userColor, cellText);
				}
			}
		}


		function startGame() {
			$.get("/board", {'request': 'startGame'})
				.done( function (data) {
					if (data) {
						console.log(data);
						$('#block-row').on('click');
					}
				})
				.fail (function (data) {
					console.log("Some error on server");
				});
		}

		function forfeitGame() {
			if (confirm('Are you sure you want to forfeit the game? You will lose this game.')) {

				$.get("/launch", {'request': 'forfeit'})
				.done( function (data) {
					if (data) {
						console.log(data);
						redirect("launch");
					}
				})
				.fail (function (data) {
					console.log("Some error on server");
				});

			} else {
				// Do nothing!
			}
		}


		function redirect(pageName) {
			var loc = window.location.href;
			var index = loc.lastIndexOf("/");
			var loc1 = loc.slice(0, index);
			window.location.href = loc1 + "/" + pageName;
		}

		function createTable(num_rows, num_cols) {

			// alert("coming here...");

			let row = document.getElementById('block-row');

			let colHTML = ``;

			for (let i = 0; i < num_cols; i++) {
				let col = `<div class="col-sm-1" style="padding: 0; margin:3px;" id="block-col` + (i+1) + `">`;

				for (let j = 0; j < num_rows; j++) {
					col = col + `<div id="` + (j+1) + `` + (i+1) + `" style="text-align: center; width:100%; background-color: yellow; margin-bottom:3px; height: 100px"
					onclick="onCellClick(this)" >
					<span id="cellDigits" style="font-size:xx-large">0</span>
					</div>`;
				}

				col = col + `</div>`;
				colHTML = colHTML + col;
			}
			row.innerHTML = colHTML;

			// console.log(colHTML);
		}

		function onCellClick(elem) {

			$.post("/board", {'request': 'addMove', 'value': elem.id})
				.done( function (data) {
					if (data) {
						console.log(data);
						fillBoardWithData(data);
						$('#block-row').off('click');
						setTimeout(checkForTurn, 2000);
					}
				})
				.fail (function (data) {
					console.log("Server Error: please check the input");
				});
		}

		function checkForTurn() {
			$.get("/board", {'request': 'isMyTurn'})
				.done( function (data, status) {
					console.log(data);
					if (data == 1) {
						$('#block-row').on('click');

						fetchCurrentGame();

					} else {
						setTimeout(checkForTurn, 1000);
					}
				})
				.fail (function(data, status) {
					console.log(data);
				});
		}

		function getCellIdText(cellID, boardData) {
			if (boardData) {
				var id = ""+cellID;
				var values = boardData[cellID];
				if (values && values.length == 2) {
					return values[1];
				}
			}
		}

		function getCellIdUserIndex(cellID, boardData) {
			if (boardData) {
				var id = ""+cellID;
				var values = boardData[cellID];
				if (values && values.length == 2) {
					return values[0];
				}
			}
		}


		function getUserColor(userIndex, colorData) {
			if (colorData) {
				for (var i = 0; i < colorData.length; i++) {
					if (colorData[i].userIndex === userIndex) {
						return colorData[i].color;
					}
				}
			}

			return 'yellow';
		}

		function setCellOwnerAndText(cellID, owner_color, text) {
			let cell = document.getElementById(cellID);
			if (cell) {
				cell.style.backgroundColor = owner_color;
				let textElem = cell.childNodes[1];
				textElem.innerHTML = text;
			}
		}

		function setUserListAndColors(userData) {

			if (!userData) {
				return;
			}

			var domElement = document.getElementById("usersListDomId");
			var usersInfo = '';
			console.log(userData);

			for (var i = 0; i < userData.length; i++) {
				usersInfo = usersInfo + `<h4>` + userData[i].userName  +`</h4> <span style=\"margin-left:2em; background-color: `+
				userData[i].color + `\"></span> <span <h4 style=\"margin-left:2em;\">` + userData[i].points + `</span><br>`;
			}

			domElement.innerHTML = usersInfo;

		}

		function getCellOwnerColor(cellID) {

			let cell = document.getElementById(cellID);
			if (cell) {
				return cell.style.backgroundColor;
			}

		}

		function getCellText(cellID) {

			let cell = document.getElementById(cellID);
			if (cell) {
				// console.log(cell.childNodes);
				let textElem = cell.childNodes[1];
				return textElem.innerHTML;
			}

		}

	</script>
</html>
