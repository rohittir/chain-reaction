

<!-- GAME TABLE -->

<!doctype html>
<html>
<head>
	<title>BOARD</title>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<style>
		body { padding-top:80px; word-wrap:break-word; }
	</style>
</head>
<body>
<div class="container">



	<div class="row">
	<div><a href="/logout" class="btn btn-default btn-sm">Logout</a></div>
	<br>
	<button type="button" class="btn btn-default">Join Table</button>
	</div>
	<br>

	<div class="row" id="block-row">
	</div>

</div>
</body>

<script type="text/javascript">

		createTable(5, 7);

		function createTable(num_rows, num_cols) {

			// alert("coming here...");

			let row = document.getElementById('block-row');

			let colHTML = ``;

			for (let i = 0; i < num_cols; i++) {
				let col = `<div class="col-sm-1" style="padding: 0; margin:3px;" id="block-col` + (i+1) + `">`;

				for (let j = 0; j < num_rows; j++) {
					col = col + `<div id="` + (j+1) + `` + (i+1) + `" style="text-align: center; width:100%; background-color: yellow; margin-bottom:3px; height: 100px"
					onclick="onCellClick(this)" >
					<span id="cellDigits" style="font-size:xx-large">0</span>
					</div>`;
				}

				col = col + `</div>`;
				colHTML = colHTML + col;
			}
			row.innerHTML = colHTML;

			// console.log(colHTML);
		}

		function onCellClick(elem) {

			$.post("/board", {'value': elem.id})
				.done( function (data) {
					if (data) {
						console.log(data);

						createTable(data.rows, data.cols);

						for(var i = 0; i < data.rows; i++) {
							for (var j = 0; j < data.cols; j++) {
								var cellID = ""+(i+1)+""+(j+1);
								var userIndex = getCellIdUserIndex(cellID, data.boardData);
								var userColor = getUserColor(userIndex, data.colorData);
								var cellText = getCellIdText(cellID, data.boardData);

								setCellOwnerAndText(cellID, userColor, cellText);
							}
						}
					}

				})
				.fail (function (data) {
					console.log("Server Error: please check the input");
				});


			// let text = getCellText(elem.id);
			// console.log(text);

			// let num = parseInt(text);
			// num++;
			// setCellOwnerAndText(elem.id, "red", ""+num);

			// let text1 = getCellText(elem.id);
			// console.log(text1);

			// let color = getCellOwnerColor(elem.id);
			// console.log(color);

		}

		function getCellIdText(cellID, boardData) {
			if (boardData) {
				var id = ""+cellID;
				var values = boardData[cellID];
				if (values && values.length == 2) {
					return values[1];
				}
			}
		}

		function getCellIdUserIndex(cellID, boardData) {
			if (boardData) {
				var id = ""+cellID;
				var values = boardData[cellID];
				if (values && values.length == 2) {
					return values[0];
				}
			}
		}


		function getUserColor(userIndex, colorData) {
			if (colorData) {
				for (var i = 0; i < colorData.length; i++) {
					if (colorData[i].userIndex === userIndex) {
						return colorData[i].color;
					}
				}
			}

			return 'yellow';
		}

		function setCellOwnerAndText(cellID, owner_color, text) {
			let cell = document.getElementById(cellID);
			if (cell) {
				cell.style.backgroundColor = owner_color;
				let textElem = cell.childNodes[1];
				textElem.innerHTML = text;
			}
		}

		function getCellOwnerColor(cellID) {

			let cell = document.getElementById(cellID);
			if (cell) {
				return cell.style.backgroundColor;
			}

		}

		function getCellText(cellID) {

			let cell = document.getElementById(cellID);
			if (cell) {
				// console.log(cell.childNodes);
				let textElem = cell.childNodes[1];
				return textElem.innerHTML;
			}

		}

	</script>
</html>
